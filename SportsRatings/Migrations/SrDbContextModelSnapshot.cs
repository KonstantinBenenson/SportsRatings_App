// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsRatings;

#nullable disable

namespace SportsRatings.Migrations
{
    [DbContext(typeof(SrDbContext))]
    partial class SrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SportsRatings.Models.SportCategoriesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SportsRatings.Models.SportsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalRate")
                        .HasColumnType("int");

                    b.Property<int?>("SportCategoriesModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportCategoriesModelId");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("SportsRatings.Models.SportsModel", b =>
                {
                    b.HasOne("SportsRatings.Models.SportCategoriesModel", null)
                        .WithMany("Sports")
                        .HasForeignKey("SportCategoriesModelId");
                });

            modelBuilder.Entity("SportsRatings.Models.SportCategoriesModel", b =>
                {
                    b.Navigation("Sports");
                });
#pragma warning restore 612, 618
        }
    }
}
